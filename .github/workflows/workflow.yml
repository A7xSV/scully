name: TestBetterFlow

on: [push]

jobs:
  buildlibs:
    name: Build libraries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [14.x]

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Build and test
        run: |
          npm ci --ignore-scripts
          npm run symlinks
          npm run nx -- run-many --target=build --all --prod
        env:
          CI: true
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          CYPRESS_INSTALL_BINARY: 0
      - name: Store build
        uses: actions/upload-artifact@v2
        with:
          name: scully-libs
          path: |
            dist/

  build:
    name: Run Scully and tests
    needs: buildlibs
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [14.x]

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: npm Install
        run: |
          npm ci
      - name: Download libs
        uses: actions/download-artifact@v2
        with:
          name: scully-libs
      - name: Build scully projects
        run: |
          node ./dist/libs/scully/src/scully --tds --project=sample-blog --noCache
          node ./dist/libs/scully/src/scully killServer --project=scully-docs  --noCache
          node ./dist/libs/scully/src/scully --project=scully-docs  --noCache
          npm ci
          npm run jest:test
          npm run cypress:install
          npm run cypress:e2e:server
        env:
          CI: true
      - name: Store build
        uses: actions/upload-artifact@v2
        with:
          name: static-sites
          path: |
            dist/static

  npm_publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checking out
        uses: actions/checkout@master
        with:
          ref: ${{ github.head_ref }}
      - name: Installing node
        uses: actions/setup-node@master
        with:
          node-version: '14'
      - name: Installing packages, build, and publish libs
        run: |
          npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
          npm ci --ignore-scripts
          npm run auto-publish-nightly
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          CYPRESS_INSTALL_BINARY: 0
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Commit changed releaseChecksums
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Bot update of releaseChecksums.json

          # Optional options appended to `git-commit`
          # See https://git-scm.com/docs/git-commit for a list of available options
          commit_options: '--no-verify --signoff'
          file_pattern: releaseChecksums.json

          # Optional commit user and author settings
          # commit_user_name: My GitHub Actions Bot # defaults to "GitHub Actions"
          # commit_user_email: my-github-actions-bot@example.org # defaults to "actions@github.com"
          # commit_author: Author <actions@github.com> # defaults to author of the commit that triggered the run

          # Optional tag message
          # Action will create and push a new tag to the remote repository and the defined branch
          # tagging_message: 'v1.0.0'

          # Optional options appended to `git-push`
          # See git-push documentation for details: https://git-scm.com/docs/git-push#_options
          push_options: '--force'

          # Optional: Disable dirty check and always try to create a commit and push
          skip_dirty_check: true

          # Optional: Skip internal call to `git fetch`
          skip_fetch: true
